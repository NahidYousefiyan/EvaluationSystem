// <auto-generated />
using System;
using EvaluationSystem.Infra.DAL.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EvaluationSystem.Infra.DAL.SQL.Migrations
{
    [DbContext(typeof(EvaluationSystemDbContext))]
    [Migration("20210604045801_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EvaluationSystem.Core.Domain.Colleges.Entities.College", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Colleges");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EvaluationIndexId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationIndexId");

                    b.ToTable("Tbl_EvaluationForms");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationFormAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint")
                        .HasColumnName("OrderId");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<byte>("WeightPercent")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Tbl_EvaluationFormAnswers");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationFormQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CriterionId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint")
                        .HasColumnName("OrderId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<byte>("Weight")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CriterionId");

                    b.HasIndex("FormId");

                    b.ToTable("Tbl_EvaluationFormQuestions");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationFormQuestionCriterion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tbl_EvaluationFormQuestionCriterion");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationIndexes.Entities.EvaluationIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tbl_EvaluationIndex");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationIndexes.Entities.EvaluationIndexCollegeWeight", b =>
                {
                    b.Property<int>("CollegeId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationIndexId")
                        .HasColumnType("int");

                    b.Property<byte>("Weight")
                        .HasColumnType("tinyint");

                    b.HasKey("CollegeId", "EvaluationIndexId");

                    b.HasIndex("EvaluationIndexId");

                    b.ToTable("Tbl_EvaluationIndexCollegeWeight");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.Users.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollegeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("UserGroup")
                        .HasColumnType("TinyInt");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CollegeId");

                    b.HasIndex("NationCode")
                        .HasDatabaseName("IX_NationCode");

                    b.HasIndex("UserName")
                        .HasDatabaseName("IX_UserName");

                    b.ToTable("Tbl_Users");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.Users.Entities.UserAccessToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Token")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tbl_UserAccessToken");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationForm", b =>
                {
                    b.HasOne("EvaluationSystem.Core.Domain.EvaluationIndexes.Entities.EvaluationIndex", "EvaluationIndex")
                        .WithMany()
                        .HasForeignKey("EvaluationIndexId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EvaluationIndex");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationFormAnswer", b =>
                {
                    b.HasOne("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationFormQuestion", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationFormQuestion", b =>
                {
                    b.HasOne("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationFormQuestionCriterion", "Criterion")
                        .WithMany()
                        .HasForeignKey("CriterionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EvaluationSystem.Core.Domain.EvaluationForms.Entities.EvaluationForm", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criterion");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.EvaluationIndexes.Entities.EvaluationIndexCollegeWeight", b =>
                {
                    b.HasOne("EvaluationSystem.Core.Domain.Colleges.Entities.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EvaluationSystem.Core.Domain.EvaluationIndexes.Entities.EvaluationIndex", "EvaluationIndex")
                        .WithMany()
                        .HasForeignKey("EvaluationIndexId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("EvaluationIndex");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.Users.Entities.User", b =>
                {
                    b.HasOne("EvaluationSystem.Core.Domain.Colleges.Entities.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeId");

                    b.Navigation("College");
                });

            modelBuilder.Entity("EvaluationSystem.Core.Domain.Users.Entities.UserAccessToken", b =>
                {
                    b.HasOne("EvaluationSystem.Core.Domain.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
